{"version":3,"file":"static/js/194.74e6bdd6.chunk.js","mappings":"wKACA,EAA0B,yBAA1B,EAAkE,8BAAlE,EAA4I,0BAA5I,EAAgL,yB,mBCOhL,EAJgB,SAACA,GACb,OAAQ,gBAAKC,UAAWC,EAAU,SAAEF,EAAMG,SAC9C,ECkCA,EAjCgB,SAACH,GACb,IAAII,EAAQJ,EAAMK,YACdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,SAACC,EAAA,EAAU,CAACC,GAAIF,EAAEE,GAAIC,KAAMH,EAAEG,KAAMC,WAAYJ,EAAEI,YACjCJ,EAAEE,GAAK,IACjEG,EAAmBV,EAAMW,SAASP,KAAI,SAAAQ,GAAC,OAAI,SAAC,EAAO,CAACL,GAAIK,EAAEL,GAAIR,QAASa,EAAEb,SAAca,EAAEL,GAAK,IAC9FM,EAAiBb,EAAMa,eAW3B,OAAQ,iBAAKhB,UAAWC,EAAU,WAC9B,gBAAKD,UAAWC,EAAe,SAC1BI,KAGL,gBAAKL,UAAWC,EAAW,SACtBY,KAEL,0BACI,qBAAUI,MAAOD,EAAgBE,SAdhB,SAACC,GACtB,IAAIC,EAAOD,EAAEE,OAAOJ,MACpBlB,EAAMuB,qBAAqBF,EAC/B,OAaI,0BACI,mBAAQG,QArBS,WACrBxB,EAAMyB,aAEV,EAkB4C,SAAC,qBAGjD,E,oBCZA,GAAeC,E,QAAAA,KACXC,EAAAA,EAAAA,KAlBkB,SAACvB,GACvB,MAAO,CACHC,YAAaD,EAAMC,YAEvB,IACyB,SAACuB,GACtB,MAAM,CACFL,qBAAsB,SAACF,GACnBO,GAASC,EAAAA,EAAAA,IAA4BR,GACzC,EACAI,YAAa,WACTG,GAASE,EAAAA,EAAAA,MAEb,EAER,IAIIC,EAAAA,EAFJ,CAEsBC,E,mJCxBlBC,EAA6B,SAAC7B,GAAK,MAAM,CACzC8B,OAAQ9B,EAAM+B,KAAKD,OACtB,EAEYH,EAAmB,SAACK,GAAe,IAEtCC,EAAiB,qGAQlB,OARkB,8BACnB,WACI,OAAIC,KAAKtC,MAAMkC,QAGJ,SAACE,GAAS,UAAKE,KAAKtC,SAFpB,SAAC,KAAQ,CAACuC,GAAG,UAK5B,KAAC,EARkB,CAASC,EAAAA,WAahC,OAFiCb,EAAAA,EAAAA,IAAQM,EAARN,CAAoCU,EAGzE,C","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__qAuBN\",\"dialogsItems\":\"Dialogs_dialogsItems__ANPRt\",\"active\":\"Dialogs_active__A5DJq\",\"messages\":\"Dialogs_messages__X0fzb\",\"message\":\"Dialogs_message__wd6K5\"};","import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n    return (<div className={s.message}>{props.message}</div>)\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem id={d.id} name={d.name} profilePic={d.profilePic}\r\n                                                             key={d.id}/>);\r\n    let messagesElements = state.messages.map(m => <Message id={m.id} message={m.message} key={m.id}/>);\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let onSendMessageClick = () => {\r\n        props.sendMessage();\r\n\r\n    }\r\n    let onNewMessageChange = (e) => {\r\n        let body = e.target.value;\r\n        props.updateNewMessageBody(body);\r\n    }\r\n\r\n    return (<div className={s.dialogs}>\r\n        <div className={s.dialogsItems}>\r\n            {dialogsElements}\r\n        </div>\r\n\r\n        <div className={s.messages}>\r\n            {messagesElements}\r\n        </div>\r\n        <div>\r\n            <textarea value={newMessageBody} onChange={onNewMessageChange}></textarea>\r\n        </div>\r\n        <div>\r\n            <button onClick={onSendMessageClick}>Send message</button>\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {sendMessageCreator, updateNewMessageBodyCreator,} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\nreturn {\r\n    dialogsPage: state.dialogsPage,\r\n}\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        updateNewMessageBody: (body) => {\r\n            dispatch(updateNewMessageBodyCreator(body));\r\n        },\r\n        sendMessage: () => {\r\n            dispatch(sendMessageCreator());\r\n\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect)(Dialogs);\r\n","import React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth){\r\n                return <Navigate to=\"/login\"/>\r\n            }else{\r\n                return <Component {...this.props}/>\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedRedirectComponent;\r\n}"],"names":["props","className","s","message","state","dialogsPage","dialogsElements","dialogs","map","d","DialogItem","id","name","profilePic","messagesElements","messages","m","newMessageBody","value","onChange","e","body","target","updateNewMessageBody","onClick","sendMessage","compose","connect","dispatch","updateNewMessageBodyCreator","sendMessageCreator","withAuthRedirect","Dialogs","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","this","to","React"],"sourceRoot":""}